1
00:00:00,748 --> 00:00:04,748
(futuristic instrumental music)

2
00:00:05,920 --> 00:00:08,530
- [Instructor] We've created
a game manager object

3
00:00:08,530 --> 00:00:10,310
that has our game manager script,

4
00:00:10,310 --> 00:00:13,140
that now can control all
the different prefabs

5
00:00:13,140 --> 00:00:14,460
that we have.

6
00:00:14,460 --> 00:00:15,630
Now what we'll need to do

7
00:00:15,630 --> 00:00:18,160
is we want to instantiate them over time,

8
00:00:18,160 --> 00:00:20,160
so I'll use a coroutine again,

9
00:00:20,160 --> 00:00:23,290
and we'll learn about a
new loop that we can use

10
00:00:23,290 --> 00:00:24,490
to do that.

11
00:00:24,490 --> 00:00:26,600
In our game manager script,

12
00:00:26,600 --> 00:00:29,530
we're actually going to
create a new method first.

13
00:00:29,530 --> 00:00:33,543
Now, we're going to create
another Ienumerator method,

14
00:00:34,400 --> 00:00:35,350
called SpawnTarget.

15
00:00:38,804 --> 00:00:42,280
That way, we can actually use
the wait for seconds method

16
00:00:42,280 --> 00:00:45,460
to control the length of
time between each spawn.

17
00:00:45,460 --> 00:00:48,053
We need to use the yield keyword again.

18
00:00:49,840 --> 00:00:53,093
And we need to return
a new WaitForSeconds,

19
00:00:57,236 --> 00:00:59,450
and it needs a float of seconds.

20
00:00:59,450 --> 00:01:01,600
For now, we'll just use spawnRate

21
00:01:01,600 --> 00:01:04,620
because we'll create the variable later.

22
00:01:04,620 --> 00:01:07,330
Now we need to actually
get a random object

23
00:01:07,330 --> 00:01:10,010
from our list to use,
so we'll use our index,

24
00:01:10,010 --> 00:01:12,780
so we can select that object in the list

25
00:01:12,780 --> 00:01:14,340
using its position.

26
00:01:14,340 --> 00:01:18,800
We'll get a random number
between the first object

27
00:01:19,640 --> 00:01:20,710
and the last object,

28
00:01:20,710 --> 00:01:24,440
so similar to how in
arrays we got the length.

29
00:01:24,440 --> 00:01:26,220
We can use targets, but in this case,

30
00:01:26,220 --> 00:01:27,940
we actually got the count,

31
00:01:27,940 --> 00:01:29,570
and so this will actually
give us the count

32
00:01:29,570 --> 00:01:32,600
of how many objects are in that list.

33
00:01:32,600 --> 00:01:34,000
In this case, it's four,

34
00:01:34,000 --> 00:01:37,280
so it'll be a random number
between zero and four,

35
00:01:37,280 --> 00:01:40,950
and then we need to actually
instantiate that object.

36
00:01:40,950 --> 00:01:43,660
So using our targets, we select the one

37
00:01:43,660 --> 00:01:45,300
at the index that we're gonna use,

38
00:01:45,300 --> 00:01:48,110
so that way we either get our bad object

39
00:01:48,110 --> 00:01:50,350
or one of our three good objects.

40
00:01:50,350 --> 00:01:53,100
Now, the loop that we're
gonna use to control this

41
00:01:53,100 --> 00:01:54,693
is called a while loop.

42
00:01:56,150 --> 00:01:59,150
And a while loop is a fusion

43
00:01:59,150 --> 00:02:02,030
between a for loop and an if statement.

44
00:02:02,030 --> 00:02:04,150
So an if statement requires a condition

45
00:02:04,150 --> 00:02:05,580
to tell it when to stop.

46
00:02:05,580 --> 00:02:08,680
A for loop will iterate over
something a certain number

47
00:02:08,680 --> 00:02:11,330
of times to execute your code.

48
00:02:11,330 --> 00:02:14,910
So while loop will execute
your code continuously,

49
00:02:14,910 --> 00:02:19,630
but instead of giving it a
defined number of times to run,

50
00:02:19,630 --> 00:02:22,100
we can actually use a condition

51
00:02:22,100 --> 00:02:24,570
to tell it when it should
actually stop running.

52
00:02:24,570 --> 00:02:27,260
We don't actually have a condition
we're gonna use just yet.

53
00:02:27,260 --> 00:02:29,020
So we'll just set this to be true.

54
00:02:29,020 --> 00:02:32,060
So while this is true,
which will always be,

55
00:02:32,060 --> 00:02:37,060
we can do our line of code
here to spawn our object.

56
00:02:37,730 --> 00:02:39,300
Our spawnRate is still mad at us,

57
00:02:39,300 --> 00:02:41,310
because it hasn't been initialized yet,

58
00:02:41,310 --> 00:02:44,940
so we'll create a
private float, spawnRate,

59
00:02:45,930 --> 00:02:48,180
and we'll set that to one for now,

60
00:02:48,180 --> 00:02:51,600
so it'll spawn every one second.

61
00:02:51,600 --> 00:02:55,610
Now, in our start method,
we'll use a coroutine

62
00:02:55,610 --> 00:02:58,430
to actually start that spawn timer,

63
00:02:58,430 --> 00:03:01,477
so if we StartCoroutine, SpawnTarget,

64
00:03:03,750 --> 00:03:07,893
now, after we've saved,
if we go to play our game,

65
00:03:10,010 --> 00:03:14,470
you should see through the
magic of our programming

66
00:03:14,470 --> 00:03:16,530
that we have all of these
different obstacles,

67
00:03:16,530 --> 00:03:17,940
even though they're
running into each other,

68
00:03:17,940 --> 00:03:19,430
that's totally fine.

69
00:03:19,430 --> 00:03:21,950
You can see it's randomly
creating different obstacles

70
00:03:21,950 --> 00:03:22,783
over time.

71
00:03:27,530 --> 00:03:30,340
What you're gonna do in
your game manager class,

72
00:03:30,340 --> 00:03:32,443
make sure you create a spawnRate

73
00:03:33,290 --> 00:03:34,920
to keep track of the number of seconds

74
00:03:34,920 --> 00:03:36,820
that you want something to spawn.

75
00:03:36,820 --> 00:03:40,020
You're going to create
another IEnumerator method

76
00:03:40,020 --> 00:03:44,120
for our SpawnTarget, we're
going to use a while loop,

77
00:03:44,120 --> 00:03:45,930
and for now our condition will just be

78
00:03:45,930 --> 00:03:47,760
that it's always true.

79
00:03:47,760 --> 00:03:50,830
In our while loop, we will yield return,

80
00:03:50,830 --> 00:03:53,320
the WaitForSeconds using the spawnRate

81
00:03:53,320 --> 00:03:54,730
that we actually want to spawn at,

82
00:03:54,730 --> 00:03:56,840
so one every second.

83
00:03:56,840 --> 00:03:58,460
You're going to get the index

84
00:04:00,270 --> 00:04:03,400
of an object to choose from our list,

85
00:04:03,400 --> 00:04:05,700
and then you're actually
going to instantiate

86
00:04:05,700 --> 00:04:08,760
that object using the index to grab it

87
00:04:08,760 --> 00:04:10,200
from our targets list.

88
00:04:10,200 --> 00:04:11,460
And then in our start method,

89
00:04:11,460 --> 00:04:13,783
just create a coroutine
using StartCoroutine,

90
00:04:14,930 --> 00:04:17,180
and then call our SpawnTarget method.

91
00:04:17,180 --> 00:04:18,130
Now it's your turn.

92
00:04:19,180 --> 00:04:23,180
(futuristic instrumental music)

